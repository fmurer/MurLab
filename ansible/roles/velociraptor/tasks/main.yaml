- name: Update Server
  ansible.builtin.apt:
    upgrade: full
    update_cache: yes
  become: true

- name: Install Requirements
  ansible.builtin.apt:
    pkg: 
      - python3-pip
      - network-manager
    update_cache: yes
  become: true

- name: Install Requirements
  ansible.builtin.pip:
    name: pexpect
  become: true

- name: Set Network
  ansible.builtin.nmcli:
    conn_name: ethernet
    ifname: enp0s8
    ip4: "{{ velociraptor_ip }}/24"
    gw4: "{{ velociraptor_gw }}"
    dns4:
      - "{{ velociraptor_dns }}"
    state: present

- name: Download Latest Velociraptor Release
  ansible.builtin.get_url:
    url: https://github.com/Velocidex/velociraptor/releases/latest/download/velociraptor-v{{ velociraptor_version }}-linux-amd64
    dest: "{{ velociraptor_install_dir }}/velociraptor"
    mode: '0744'

- name: Generate Velociraptor Server Config
  ansible.builtin.command: "{{ velociraptor_install_dir }}/velociraptor config generate"
  register: server_config

- name: Create Files Folder
  local_action: file path="{{ role_path }}/files" state=directory

- name: Check if Velociraptor Server Config Exists
  local_action: stat path="{{ role_path }}/files/{{ velociraptor_server_config }}"
  register: config_exists

- name: Copy Velociraptor Server Config Locally
  local_action: copy content="{{ server_config.stdout }}" dest="{{ role_path }}/files/{{ velociraptor_server_config }}"
  when: config_exists.stat.exists != true

- name: Edit "{{ role_path }}/files/{{ velociraptor_server_config }}"
  ansible.builtin.replace:
    path: "{{ role_path }}/files/{{ velociraptor_server_config }}"
    regexp: "  - https://localhost:8000/"
    replace: "  - https://{{ velociraptor_ip }}:8000/"
  delegate_to: localhost

- name: Edit "{{ role_path }}/files/{{ velociraptor_server_config }}"
  ansible.builtin.replace:
    path: "{{ role_path }}/files/{{ velociraptor_server_config }}"
    regexp: "  bind_address: 127.0.0.1"
    replace: "  bind_address: 0.0.0.0"
    after: "GUI:"
    before: "  bind_port: 8889"
  delegate_to: localhost

- name: Copy Velociraptor Server Config
  ansible.builtin.copy:
    src: "{{ role_path }}/files/{{ velociraptor_server_config }}"
    dest: "{{ velociraptor_install_dir }}/{{ velociraptor_server_config }}"

- name: Generate Velociraptor Client Config
  ansible.builtin.command: "{{ velociraptor_install_dir }}/velociraptor -c {{ velociraptor_install_dir }}/{{ velociraptor_server_config }} config client"
  register: client_config

- name: Check if Velociraptor Client Config Exists
  local_action: stat path="{{ role_path }}/files/{{ velociraptor_client_config }}"
  register: client_config_exists

- name: Copy Velociraptor Client Config
  local_action: copy content="{{ client_config.stdout }}" dest="{{ role_path }}/files/{{ velociraptor_client_config }}"
  when: client_config_exists.stat.exists != true

- name: Create Velociraptor Server Package
  ansible.builtin.command: "{{ velociraptor_install_dir }}/velociraptor -c {{ velociraptor_install_dir }}/{{ velociraptor_server_config }} debian server"

- name: Install Velociraptor Server
  ansible.builtin.command: "dpkg -i /home/vagrant/velociraptor_{{ velociraptor_version }}_server.deb"
  become: true

- name: Add Velociraptor Admin User
  ansible.builtin.expect:
    command: "sudo -u velociraptor velociraptor -c {{ velociraptor_install_dir }}/{{ velociraptor_server_config }} user add {{ velociraptor_admin_user }} --role administrator"
    responses:
      (?i)Enter user's password: "{{ velociraptor_admin_password }}"
